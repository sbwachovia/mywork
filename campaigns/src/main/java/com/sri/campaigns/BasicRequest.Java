/** *  */package com.bolla.sri.rest.base;import java.io.Serializable;import java.util.List;import javax.validation.Valid;import org.jboss.resteasy.spi.validation.ValidateRequest;import com.bolla.sri.base.domain.ApiBaseEntity;import com.bolla.sri.base.domain.BaseEntity;import com.bolla.sri.base.domain.ModifyInfo;import com.bolla.sri.base.domain.RevisionBaseEntity;@ValidateRequestpublic class BaseRequest<B> implements Serializable { @Valid private B entity; private List<B> entities; private static final long serialVersionUID = -2314537171099437962L; private ModifyInfo modifyInfo; /**  * @param <B>  * @return the entity  */ public B getEntity() {  return entity; } /**  * @param <B>  * @param entity  *            the entity to set  */ public void setEntity(B entity) {  this.entity = entity; } /**  * @return the entities  */ public List<B> getEntities() {  return entities; } /**  * @param entities  *            the entities to set  */ public void setEntities(List<B> entities) {  this.entities = entities; } public void populate(String modifiedBy, String requestId) {  final String userId = modifiedBy != null ? modifiedBy.toUpperCase() : modifiedBy;  getModifyInfo().setModifiedBy(userId);  getModifyInfo().setRequestId(requestId);  if (this.entity != null) {   if (this.entity instanceof BaseEntity) {    ((BaseEntity) this.entity).setModifyInfo(getModifyInfo());   }   if (this.entity instanceof RevisionBaseEntity) {    ((RevisionBaseEntity) this.entity).setModifiedBy(userId);    ((RevisionBaseEntity) this.entity).setComments(getModifyInfo().getComments());   }  }  if (this.entities != null) {   if (this.entities.get(0) instanceof BaseEntity) {    this.entities.parallelStream().forEach(b -> {     BaseEntity bE = (BaseEntity) b;     bE.setModifyInfo(getModifyInfo());    });   }   if (this.entities.get(0) instanceof RevisionBaseEntity) {    this.entities.parallelStream().forEach(b -> {     RevisionBaseEntity mE = (RevisionBaseEntity) b;     mE.setModifiedBy(userId);     mE.setComments(getModifyInfo().getComments());    });   }  }    if (this.entity != null) {   if (this.entity instanceof ApiBaseEntity) {    ((ApiBaseEntity) this.entity).setModifyInfo(getModifyInfo());   }     } } /**  * @return the modifyInfo  */ public ModifyInfo getModifyInfo() {    modifyInfo = modifyInfo != null ? modifyInfo : new ModifyInfo();    return modifyInfo; } /**  * @param modifyInfo  *            the modifyInfo to set  */ public void setModifyInfo(ModifyInfo modifyInfo) {  this.modifyInfo = modifyInfo; }}
