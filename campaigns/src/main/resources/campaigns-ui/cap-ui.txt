/*! * campaign-ui *  * Version: 1.0.0-beta.1 - 2017-03-22T14:26:14.373Z * License:  */angular.module('cap', ['ngResource', 'ui.grid', 'ui.grid.autoResize', 'ui.grid.saveState', 'ui.grid.resizeColumns', 'ui.grid.moveColumns' , 'ui.grid.grouping' ,                        'ui.grid.selection', 'ui.bootstrap', 'ngMessages', 'ngStorage', 'ui.bootstrap', 'ui.bootstrap.datepicker', 'ui.bootstrap.timepicker', 'sri.userInfo.module', 'sri.customTag.module' ]);CapAlertMessagesCtrl.$inject = ["$scope", "alertFactory"];angular.module('cap').controller('capAlertMessagesCtrl', CapAlertMessagesCtrl);function CapAlertMessagesCtrl($scope, alertFactory) {    this.alerts = [];    $scope.$watch(alertFactory.getAlertMessages, function(newValue, oldValue) {        this.alerts = alertFactory.getAlertMessages();    }.bind(this), true);    this.closeAlert = function() {        alertFactory.clearAlertMessages();    };}CapCRUDCtrl.$inject = ["$scope", "$uibModalInstance", "$q", "operation", "cap", "BIC_CONSTANTS", "capService", "capGridService", "sriCommentService", "alertFactory", "sriAlertService", "sriApiService"];angular.module('cap').controller('capCRUDCtrl', CapCRUDCtrl);function CapCRUDCtrl($scope, $uibModalInstance,$q, operation, cap,BIC_CONSTANTS,  capService, capGridService, sriCommentService, alertFactory , sriAlertService, sriApiService) {    this.changeMade = false;    this.operation = operation;    this.errors = [];    this.original = angular.copy(cap);    this.capOfInterest = angular.copy(cap);    this.editMade = function() {        this.changeMade = angular.equals(this.capOfInterest, this.original) === false;    };    this.watchcapOfInterest = function() {        return this.capOfInterest;    };    $scope.$watch(this.watchcapOfInterest.bind(this), function(newValue, oldValue) {        this.editMade();    }.bind(this), true);    //this.edit = function() {    //    var _this = this;    //    capService.get({id: _this.capOfInterest.id}).$promise.then(function (response) {    //        _this.operation = 'edit';    //        _this.capOfInterest = response.data.entity;    //        _this.original = angular.copy(response.data.entity);    //    });    //}.bind(this);    this.edit = function(maintenanceFlag){        var _this = this;        var request =  {            url: BIC_CONSTANTS.get.url,            method: BIC_CONSTANTS.get.method,            params: {                id: _this.capOfInterest.id             //   action: maintenanceFlag ? maintenanceFlag : false            }        };        sriApiService.invoke(request).then(function (response) {                this.operation = 'edit';                _this.capOfInterest = response.entity;                _this.original = angular.copy(response.entity);            }.bind(this))            .catch(function (err) {                if (err) {                    switch (err.code) {                        case 422:                            sriAlertService.getAlert({                                alertText: err.error[0] + " Are you sure you really want to edit?",                                okButtonText: 'Yes',                                cancelButtonText: 'No',                                okButtonAction: function () {                                    return _this.edit(true);                                },                                cancelButtonAction: function () {                                    return _this.close();                                }                            });                    }                }            });    };    //this.submit = function() {    //    var _this = this;    //    var request = {};    //    //    sriCommentService.getComments({excludeDateTime:true}).then(function(comments) {    //        request = angular.merge(request, {entity: _this.capOfInterest}, {modifyInfo: comments});    //        if(_this.operation === 'add') {    //            return capService.create(request).$promise;    //        } else {    //            return capService.update({id: _this.capOfInterest.id}, request).$promise;    //        }    //    }).then(onSuccess.bind(_this) , onFailure.bind(_this));    //}.bind(this);    if(this.operation !== 'add') {        this.next = function() {            this.close();            capGridService.onNext();        };        this.back = function() {            this.close();            capGridService.onBack();        };    }    this.submit = function (){        var _this = this;        if(_this.operation === 'add') {            _this.createCap() ;        } else {            _this.submitCap();        }    };    this.submitCap = function() {        var _this = this;        sriCommentService.getComments({excludeDateTime:true}).then(function(comments) {            var request =  {                url: BIC_CONSTANTS.update.url,                method: BIC_CONSTANTS.update.method,                params: {                    id: _this.capOfInterest.id                },                payload: {                    entity:_this.capOfInterest,                    modifyInfo: comments                }            };            return sriApiService.invoke(request);        }).then(onSuccess.bind(_this) , onFailure.bind(_this));    }.bind(this);    this.createCap = function() {        var _this = this;        sriCommentService.getComments({excludeDateTime:true}).then(function(comments) {            var request =  {                url: BIC_CONSTANTS.create.url,                method: BIC_CONSTANTS.create.method,                //params: {                //    id: _this.capOfInterest.id                //},                payload: {                    entity:_this.capOfInterest,                    modifyInfo: comments                }            };            return sriApiService.invoke(request);        }).then(onSuccess.bind(_this) , onFailure.bind(_this));    }.bind(this);    this.delete = function () {        sriAlertService.getAlert({            alertText: "Are you sure you really want to delete?",            okButtonText: 'Yes',            cancelButtonText: 'No',            okButtonAction: this.submitDelete,            cancelButtonAction: function () {                $q.reject();            }.bind(this)        });    };    this.submitDelete = function() {        var _this = this;        sriCommentService.getComments({excludeDateTime:true}).then(function(comments) {            var request = {                url: BIC_CONSTANTS.remove.url,                method: BIC_CONSTANTS.remove.method,                params: {                    id:_this.capOfInterest.id                },                payload: {                    modifyInfo: comments                }            };            return sriApiService.invoke(request);        }).then(onSuccess.bind(_this) , onFailure.bind(_this));    }.bind(this);    var onSuccess = function() {        $uibModalInstance.close();        alertFactory.addSuccessAlert('Transaction has been submitted successfully');        capGridService.refreshGrid();    };    var onFailure = function(errorHandler) {        this.errors = [];        if(errorHandler.code) {            switch (errorHandler.code) {                case 412:                    this.errors.push(errorHandler.message);                    break;                default :                    this.close();                    alertFactory.addErrorAlert('The application has encountered an unknown error');            }        }    };    this.close = function () {        $uibModalInstance.close();    };    this.revert = function () {        $uibModalInstance.dismiss('cancel');    };}CapListCtrl.$inject = ["$rootScope", "uiGridConstants", "BIC_CONSTANTS", "capService", "capGridService", "capModalPanelService"];angular.module('cap').controller('capListCtrl', CapListCtrl);function CapListCtrl($rootScope, uiGridConstants,BIC_CONSTANTS,capService, capGridService, capModalPanelService) {    this.appId = BIC_CONSTANTS.APP_ID;    this.searchFilter = {cap:"", capShortname:""};     var columnDefs = [        { field: 'cap', displayName: 'BIC'},        { field: 'capName', displayName: 'Name'},        { field: 'capAddress1', displayName: 'Address1'},        { field: 'capAddress2', displayName: 'Address2'},        { field: 'capAddress3', displayName: 'Address3'},        { field: 'capAddress4', displayName: 'Address4'}    ];    //var onRowSelect = function(selectedRow) {    //    capModalPanelService.selectedRow(selectedRow.entity);    //};    var onRowSelect = function(selectedRow) {            capModalPanelService.selectedRow(selectedRow.entity);    };    var initGrid = function() {        capGridService.addColumns(columnDefs);        capGridService.intialSort('cap', 'asc');        capGridService.onRowSelect(onRowSelect.bind(this));    };    initGrid();    this.grid = capGridService.getGrid();    this.refreshGrid = function() {        capGridService.refreshGrid();    };    this.add = function() {        capModalPanelService.add();    };}angular.module('cap').directive('sriCap', sriCap);function sriCap() {  return {    restrict: 'E',    templateUrl: 'app/templates/capList.html',  };}angular.module('cap').constant('CAP_CONSTANTS', {    'APP_ID' : 'CAP',    'REFRESH_GRID' : 'refreshGrid',    get: {        url: '/sri-web/cap/:id',        method: 'GET'    },    create: {        url: '/sri-web/cap',        method: "POST"    },    change: {        url: '/sri-web/cap/edit/:id/:action',        method: "PUT",        params: {            id: '@id',            action: '@action'        }    },    revert: {        url: '/sri-web/cap/revert/:id',        method: "PUT",        params: {            id: '@id'        }    },    update: {        url: '/sri-web/cap/update/:id',        method: "PUT"    },    getAll: {        url: '/sri-web/cap?all=true',        method: 'GET'    },    remove: {        url: "/sri-web/cap/delete/:id",        method: "PUT"    }});angular.module("sri").run(["$templateCache", function($templateCache) {$templateCache.put("app/templates/capEditModalView.html","<div class=editPanel right-click-context><sri-spinner></sri-spinner><div class=modal-header><div><sri-entity-status class=col-md-10 entity=capCRUDCtrl.capOfInterest operation=capCRUDCtrl.operation resource=BIC title=Bic></sri-entity-status></div><div class=col-md-1 ng-if=\"capCRUDCtrl.operation!=\'edit\'\"><sri-history-info id=capCRUDCtrl.capOfInterest.id></sri-history-info></div><div class=col-md-1><sri-pdf-report operation=capCRUDCtrl.operation url=/sri-web-domain/cap/getPdf uuid=capCRUDCtrl.capOfInterest.id></sri-pdf-report></div></div><div class=modal-body><form name=form class=form-horizontal role=form novalidate><sri-fieldset no-border ng-disabled=\"capCRUDCtrl.operation == \'read\'\" sri-write-access=BIC><div class=form-group><sri-input label=BIC name=cap type=text sri-alpha-numeric required=true min-length=11 max-length=11 sri-model=capCRUDCtrl.capOfInterest.cap sri-disabled=\"capCRUDCtrl.operation != \'add\'\" label-class=\"col-md-2 control-label text-right\" input-class=\"col-md-4 text-left\"></sri-input></div><div class=form-group><sri-input label=Name name=capName sri-alpha-numeric-space type=text max-length=50 sri-model=capCRUDCtrl.capOfInterest.capName label-class=\"col-md-2 control-label text-right\" input-class=\"col-md-4 text-left\"></sri-input></div><div class=form-group><sri-input label=Address1 name=address1 sri-alpha-numeric-space type=text max-length=35 sri-model=capCRUDCtrl.capOfInterest.capAddress1 label-class=\"col-md-2 control-label text-right\" input-class=\"col-md-4 text-left\"></sri-input></div><div class=form-group><sri-input label=Address2 name=address2 sri-alpha-numeric-space type=text max-length=35 sri-model=capCRUDCtrl.capOfInterest.capAddress2 label-class=\"col-md-2 control-label text-right\" input-class=\"col-md-4 text-left\"></sri-input></div><div class=form-group><sri-input label=Address3 name=address3 sri-alpha-numeric-space type=text max-length=35 sri-model=capCRUDCtrl.capOfInterest.capAddress3 label-class=\"col-md-2 control-label text-right\" input-class=\"col-md-4 text-left\"></sri-input></div><div class=form-group><sri-input label=Address4 name=address4 sri-alpha-numeric-space type=text max-length=35 sri-model=capCRUDCtrl.capOfInterest.capAddress4 label-class=\"col-md-2 control-label text-right\" input-class=\"col-md-4 text-left\"></sri-input></div></sri-fieldset></form></div><div class=modal-footer><sri-business-validation-errors sri-business-errors=capCRUDCtrl.errors></sri-business-validation-errors><sri-entity-buttons controller=capCRUDCtrl form=form operation=capCRUDCtrl.operation enable-submit=capCRUDCtrl.changeMade resource=BIC entity=capCRUDCtrl.capOfInterest></sri-entity-buttons></div></div>");$templateCache.put("app/templates/capList.html","<div class=grid ng-controller=\"bicListCtrl as listCtrl\"><div class=row><div class=col-md-5><form name=searchform class=form-horizontal role=form novalidate><pypp-fieldset label-name=Search><div class=form-horizontal><div class=form-group><pypp-search-input pypp-alpha-numeric label=BIC label-class=\"col-lg-3 control-label text-right\" input-class=\"col-lg-5 text-left\" name=bic type=text max-length=11 pypp-model=listCtrl.searchFilter.bic></pypp-search-input></div><div class=form-group><button type=submit class=\"btn btn-primary col-md-0 col-md-offset-10\" ng-click=listCtrl.refreshGrid() ng-disabled=searchform.$invalid>Search</button></div></div></pypp-fieldset></form></div></div><div class=message ng-controller=\"bicAlertMessagesCtrl as alertsCtrl\" style=\"text-align: center\"><pypp-fieldset no-border><alert ng-repeat=\"alert in alertsCtrl.alerts\" type={{alert.type}} close=alertsCtrl.closeAlert() dismiss-on-timeout=2000>{{alert.msg}}</alert></pypp-fieldset></div><br><div><pypp-fieldset label-name=Results><pypp-ui-grid flat-entity-access app-id=listCtrl.appId grid-options=listCtrl.grid search-filter=listCtrl.searchFilter url=/pypp-web/bic/:id></pypp-ui-grid></pypp-fieldset></div><br><pypp-fieldset no-border><button type=submit class=\"btn btn-primary\" ng-click=listCtrl.add() pypp-write-access=BIC>Add</button></pypp-fieldset></div>");}]);angular.module('cap').factory('alertFactory', AlertFactoryService);function AlertFactoryService(){    var alertFactory = {};    var alertMessages = [];    alertFactory.addSuccessAlert = function (message) {        alertMessages = [];        var alertMessage = {type: 'success', msg: message};        alertMessages.push(alertMessage);    };    alertFactory.addErrorAlert = function (message) {        alertMessages = [];        var alertMessage = {type: 'danger', msg: message};        alertMessages.push(alertMessage);    };    alertFactory.getAlertMessages = function () {        return alertMessages;    };    alertFactory.clearAlertMessages = function () {        alertMessages = [];    };    return alertFactory;}angular.module('cap').service('capGridService', BicGridService);function BicGridService() {    var gridOptions = {};    this.addColumns = function(columnDefs) {        gridOptions.columnDefs = columnDefs;    };    this.intialSort = function(sortField, sortDirection) {        gridOptions.sortFields = sortField;        gridOptions.sortDirections = sortDirection;    };    this.onRowSelect = function(method) {        gridOptions.onRowSelect = method;    };    this.refreshGrid = function() {        gridOptions.refreshGrid();    };    this.onBack = function() {        gridOptions.onBack();    };    this.onNext = function() {        gridOptions.onNext();    };    this.getGrid = function() {        return gridOptions;    };}BicModalPanelService.$inject = ["$uibModal"];angular.module('cap').service('capModalPanelService', BicModalPanelService);function BicModalPanelService($uibModal) {  this.selectedRow = function (selectedBic) {    this.modalOpen('lg', 'read', selectedBic);  };  this.add = function() {    this.modalOpen('lg', 'add');  };  this.modalOpen = function (size, operation, cap) {    var modalInstance = $uibModal.open({      animation: true,      backdrop: false,      templateUrl: 'app/templates/capEditModalView.html',      controller: 'capCRUDCtrl as capCRUDCtrl',      size: size,      resolve: {        cap: function() {          return cap;        },        operation: function() {          return operation;        }      },    });  };} capService.$inject = ["$resource"];angular.module('cap').factory('capService', capService); function capService($resource) {     return $resource('/sri-web-domain/cap/:id', {id: '@id'}, {         get: {             method: 'GET',             headers: { 'REQUEST_ID': 'requestId' }         },         create: {             method: "POST",             headers: {                  'REQUEST_ID': 'requestId'             }         },         update: {             url: "/sri-web-domain/cap/update/:id",             method: "PUT",             params: {Id: '@id'},             headers: {                  'REQUEST_ID': 'requestId'             }         },         remove: {             url: "/sri-web-domain/cap/delete/:id",             method: "PUT",             headers: {                  'REQUEST_ID': 'requestId'             }         }     }); }
