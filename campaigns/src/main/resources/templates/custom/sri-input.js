angular.module('sri.customTag.module').directive('sriInput', sriInput);    function sriInput($compile) {        return {            restrict: 'E',            replace: true,            require: ['?^form'],            scope: {                type: "@",                sriModel: "=",                label: '@',                name: "@",                minLength: "@",                maxLength: "@",                pattern: "@",                sriDisabled: "=",                required: "@",                trim: "@",                labelClass: "@",                inputClass: "@",                allowLowerCase: "@",                externalSearch: "&",                customErrors: "="            },            templateUrl: sriInputTemplateUrl,            link: function(scope, element, attributes, controller) {                var formController = controller[0];                appendValidationDirectives(element, attributes);                $compile(element)(scope);                if (formController) {                    scope.errorhandler = formController[scope.name];                }                if(scope.inputClass=== undefined) {                    scope.inputClass = "col-md-2";                }                if(scope.labelClass=== undefined) {                    scope.labelClass = "col-md-1";                }                scope.regexPattern = new RegExp(scope.pattern);                var spanElem = element.find('span');                spanElem.bind("click", function(){                    scope.externalSearch();                });            },        };    }    function appendValidationDirectives(element, attributes) {        var inputElement = element.find('input');        if(attributes.sriAlphaNumeric !== undefined) {            inputElement.attr('sri-alpha-numeric', '');        }        if(attributes.sriAlphaNumericSpace !== undefined){            inputElement.attr('sri-alpha-numeric-space', '');        }        if(attributes.sriAlpha !== undefined){            inputElement.attr('sri-alpha', '');        }    }    function sriInputTemplateUrl(elem, attrs) {        var defaultUrl = 'app/templates/sri-input';        if (attrs.type === 'checkbox') {            return defaultUrl + '-checkbox.html';        }        if (attrs.type === 'search') {            return defaultUrl + '-search.html';        }        return defaultUrl + '.html';    }
